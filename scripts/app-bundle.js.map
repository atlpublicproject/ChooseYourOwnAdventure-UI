{"version":3,"sources":["src/objects/objects.ts","src/api.ts","src/app.ts","src/environment.ts","src/interpolator.ts","src/main.ts","src/state.ts","src/resources/index.ts","src/pages/browse.ts","src/pages/play.ts","F:/PublicProjects/ChooseYourOwnAdventure/Code/src/app.html","F:/PublicProjects/ChooseYourOwnAdventure/Code/src/app.css","F:/PublicProjects/ChooseYourOwnAdventure/Code/src/pages/browse.html","F:/PublicProjects/ChooseYourOwnAdventure/Code/src/pages/play.html","F:/PublicProjects/ChooseYourOwnAdventure/Code/src/resources/elements/browse-card.html"],"names":[],"mappings":";;IAAA;QAAA;QAaA,CAAC;QAAD,YAAC;IAAD,CAbA,AAaC,IAAA;IAbY,aAAK,QAajB,CAAA;IAED;QAAA;QASA,CAAC;QAAD,WAAC;IAAD,CATA,AASC,IAAA;IATY,YAAI,OAShB,CAAA;IAED;QAAA;QAGA,CAAC;QAAD,kBAAC;IAAD,CAHA,AAGC,IAAA;IAHY,mBAAW,cAGvB,CAAA;IAED;QAAA;QAWA,CAAC;QAAD,YAAC;IAAD,CAXA,AAWC,IAAA;IAXY,aAAK,QAWjB,CAAA;;;;;;;;;;;;;;ICtCD,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,EAAE,GAAG,CAAC,CAAC;IAGX;QAEE,aAAoB,IAAiB;YAAjB,SAAI,GAAJ,IAAI,CAAa;YAkBrC,iBAAY,GAAG,KAAK,CAAC;YAjBnB,IAAI;iBACD,SAAS,CAAE,UAAA,MAAM;gBACd,MAAM;qBACH,WAAW,CAAC,wBAAwB,CAAC;qBACrC,YAAY,CAAC;oBACV,WAAW,EAAE,MAAM;oBACnB,OAAO,EAAE;wBACL,QAAQ,EAAE,kBAAkB;wBAC5B,kBAAkB,EAAE,OAAO;qBAC9B;iBACH,CAAC,CAAC;YACR,CAAC,CACF,CAAC;YAEJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;QAKD,oBAAM,GAAN,UAAQ,UAAmB;YAA3B,iBAiCC;YAhCC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBACT,IAAI,OAAO,GAAG,KAAK,CAAC;oBAEpB,IAAI,UAAU,GACZ,UAAA,CAAC;wBAAO,MAAM,CAAQ;4BAClB,KAAK,EAAG,CAAC,CAAC,KAAK;4BACf,WAAW,EAAG,CAAC,CAAC,WAAW;4BAC3B,IAAI,EAAG,CAAC,CAAC,IAAI;4BACb,IAAI,EAAG,CAAC,CAAC,IAAI;4BACb,OAAO,EAAG,CAAC,CAAC,OAAO;4BACnB,OAAO,EAAE,CAAC,CAAC,OAAO;4BAGlB,SAAS,EAAG,CAAC,CAAC,SAAS;4BACvB,SAAS,EAAG,CAAC,CAAC,QAAQ;yBACzB,CAAA;oBAAA,CAAC,CAAC;oBAEL,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,SAAO,UAAY,GAAG,EAAE,CAAC;oBAChD,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAW,CAAG,CAAC;yBAE5B,IAAI,CAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAE;yBACnC,IAAI,CAAE,UAAA,IAAI;wBACH,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAE,UAAA,CAAC,IAAI,OAAA,UAAU,CAAC,CAAC,CAAC,EAAb,CAAa,CAAE,CAAC;wBAC7C,OAAO,CAAC,OAAO,CAAC,CAAC;oBACvB,CAAC,CAAC,CAAC;oBAEL,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC9B,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAED,sBAAQ,GAAR,UAAU,SAAkB;YAA5B,iBAmBC;YAjBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBAET,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAK,SAAS,SAAM,CAAC;yBAElC,IAAI,CAAE,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAE;yBACnC,IAAI,CAAE,UAAA,IAAI;wBAEH,OAAO,CAAC,IAAI,CAAC,CAAC;oBACpB,CAAC,CAAC,CAAC;gBAGT,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QAEL,CAAC;QAID,qBAAO,GAAP,UAAS,cAAuB,EAAE,UAAmB;YACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBAET,IAAI,IAAI,GAAS,IAAI,CAAC,UAAU,CAAC,CAAC;oBAElC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAEhB,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAEM,qBAAO,GAAd,UAAgB,IAAW,EAAE,IAAY;QAEzC,CAAC;QAlGH;YAAC,0BAAM,CAAC,iCAAU,CAAC;;eAAA;QAqGnB,UAAC;IAAD,CApGA,AAoGC,IAAA;IApGY,WAAG,MAoGf,CAAA;IAGD,IAAI,KAAK,GAAG,CAAC;YACX,MAAM,EAAG,yBAAyB;YAClC,KAAK,EAAG,aAAa;YACrB,WAAW,EAAG,uBAAuB;YACrC,KAAK,EAAG,CAAC;YACT,MAAM,EAAG,CAAC,MAAM,EAAE,MAAM,CAAC;SAC1B,CAAC,CAAC;IAEH,IAAI,IAAI,GAAG;QAET,KAAK,EAAE;YACL,QAAQ,EAAC,EAAE;SACZ;QAED,CAAC,EAAG;YACF,IAAI,EAAI,6BAA6B;YACrC,KAAK,EAAE,0BAA0B;YACjC,KAAK,EAAG,CAAC,UAAU,EAAE,2BAA2B,CAAC;YACjD,OAAO,EAAG,CAAE,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,CAAC,cAAc,EAAC,GAAG,CAAC,CAAE;SACtD;QAED,CAAC,EAAG;YACF,IAAI,EAAI,0DAA0D;YAClE,KAAK,EAAE,yBAAyB;YAChC,OAAO,EAAG,CAAE,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,EAAC,GAAG,CAAC,CAAE;SAC9C;QAED,CAAC,EAAG;YACF,IAAI,EAAI,6BAA6B;YACrC,KAAK,EAAE,sBAAsB;YAC7B,OAAO,EAAG,CAAE,CAAC,eAAe,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,EAAC,GAAG,CAAC,CAAE;SACvD;QAED,CAAC,EAAG;YACF,IAAI,EAAI,+CAA+C;YACvD,KAAK,EAAG,iBAAiB;YACzB,OAAO,EAAG,CAAE,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,CAAC,EAAG;YACF,IAAI,EAAI,0DAA0D;YAClE,KAAK,EAAG,qBAAqB;YAC7B,OAAO,EAAG,EAAE;SACb;KAEF,CAAA;;;;;;;;;;;;;;ICpJD;QAGC,aAAqB,eAAiC;YAAjC,oBAAe,GAAf,eAAe,CAAkB;YAKtD,YAAO,GAAG,2BAA2B,CAAC;YAHpC,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QAMD,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC;gBAGT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,KAAK,EAAC,cAAc,EAAI,IAAI,EAAE,QAAQ,EAAI,QAAQ,EAAE,gBAAgB,EAAE,GAAG,EAAC,IAAI,EAAC;gBAIxG,EAAE,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,MAAM;oBACtC,QAAQ,EAAE,cAAc,EAAE,kBAAkB,EAAC,SAAS;iBAG3C;aAEhB,CAAC,CAAC;QACL,CAAC;QAED,sBAAQ,GAAR;YACE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;QAED,uBAAS,GAAT;YAAA,iBAIC;YAHA,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,aAAa,EAAE,UAAA,KAAK;gBAC/C,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;QAxCH;YAAC,0BAAM,CAAC,0CAAe,CAAC;;eAAA;QA4CxB,UAAC;IAAD,CA3CA,AA2CC,IAAA;IA3CY,WAAG,MA2Cf,CAAA;;;;;ICnDD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICSF;QAAA;QAmBA,CAAC;QAfG,+BAAQ,GAAR,UAAS,KAAK;YACV,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAE,IAAI,EAAE,KAAK,CAAC,KAAK,CAAE,CAAC;QACvC,CAAC;QAED,sCAAe,GAAf;YACI,IAAI,IAAI,GAAG,gBAAc,IAAI,CAAC,QAAQ,iBAAc,CAAC;YACrD,MAAM,CAAC,IAAI,sCAAkB,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QAOL,mBAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBY,oBAAY,eAmBxB,CAAA;;;;;IC1BK,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAde,iBAAS,YAcxB,CAAA;;;;;ICrBD;QAAA;YAME,cAAS,GAAS,EAAE,CAAC;QAmBvB,CAAC;QAAD,YAAC;IAAD,CAzBA,AAyBC,IAAA;IAzBY,aAAK,QAyBjB,CAAA;;;;;IC3BD,mBAA0B,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC,6BAA6B,CAAC,CAAC;IACxD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;;;;;;;;;;ICGD;QAEC,gBAAqB,MAAe,EAAU,GAAS,EAAU,eAA+B;YAA3E,WAAM,GAAN,MAAM,CAAS;YAAU,QAAG,GAAH,GAAG,CAAM;YAAU,oBAAe,GAAf,eAAe,CAAgB;YAC7F,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACrD,CAAC;QAED,yBAAQ,GAAR;YAAA,iBAIC;YAHE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CACzB,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,MAAM,GAAG,GAAG,EAAjB,CAAiB,CACzB,CAAC;QACT,CAAC;QAED,yBAAQ,GAAR,UAAS,KAAK;YACX,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,IAAI,EAAG,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;YAE3D,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;QACtD,CAAC;QAjBF;YAAC,0BAAM,CAAE,uBAAM,EAAE,SAAG,EAAE,0CAAe,CAAE;;kBAAA;QAuBvC,aAAC;IAAD,CAtBA,AAsBC,IAAA;IAtBY,cAAM,SAsBlB,CAAA;;;;;;;;;;;;;;ICrBD;QAEC,cAAqB,MAAe,EAAU,GAAS,EAAU,KAAa,EACzD,eAAiC;YADjC,WAAM,GAAN,MAAM,CAAS;YAAU,QAAG,GAAH,GAAG,CAAM;YAAU,UAAK,GAAL,KAAK,CAAQ;YACzD,oBAAe,GAAf,eAAe,CAAkB;YAyFtD,mBAAc,GAAa,KAAK,CAAC;QAzFwB,CAAC;QAS1D,0BAAW,GAAX,UAAa,MAAM;YAAnB,iBA4BC;YA1BC,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI;gBACxB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,IAAK,CAAC,CAAA,CAAC;gBAGzC,IAAI,CAAC,GAAI,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM;oBACpC,OAAA,KAAI,CAAC,GAAG;yBACL,QAAQ,CAAE,MAAM,CAAC,IAAI,CAAE;yBACvB,IAAI,CAAE,UAAA,GAAG;wBAER,EAAE,CAAC,CAAE,GAAG,CAAC,KAAK,IAAI,IAAK,CAAC,CAAA,CAAC;4BACvB,OAAO,CAAC,KAAK,CAAC,CAAC;4BACf,KAAK,CAAC,wBAAwB,CAAC,CAAC;4BAChC,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;wBACxC,CAAC;wBAAA,IAAI,CAAA,CAAC;4BAEJ,KAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;4BACvB,OAAO,CAAC,IAAI,CAAC,CAAC;wBAChB,CAAC;oBAEL,CAAC,CAAC,CAAC,KAAK,CACN,UAAC,GAAG,IAAK,OAAA,KAAK,CAAC,wBAAwB,GAAG,GAAG,CAAE,EAAtC,CAAsC,CAChD;gBAhBD,CAgBC,CACF,CAAC;gBAEF,MAAM,CAAC,CAAC,CAAC;YACZ,CAAC;QACH,CAAC;QAED,uBAAQ,GAAR,UAAU,MAAM;YAEb,IAAI,IAAI,GAAG,CAAC,CAAC;YACb,EAAE,CAAC,CAAE,MAAM,CAAC,IAAI,IAAI,IAAK,CAAC,CAAA,CAAC;gBACvB,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;YACpB,CAAC;YAGD,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAEvB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;QAED,0BAAW,GAAX,UAAa,OAAgB;YAE3B,IAAG,CAAC;gBACH,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gBACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;gBAC9B,IAAI,CAAC,YAAY,EAAE,CAAC;YACrB,CAAC;YAAA,KAAK,CAAA,CAAC,EAAE,CAAC,CAAA,CAAC;gBACT,KAAK,CAAC,yBAAuB,OAAS,CAAC,CAAC;YAC1C,CAAC;QACH,CAAC;QAED,uBAAQ,GAAR,UAAS,OAAgB;YACvB,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;gBAChC,KAAK,CAAC,6BAA6B,CAAC,CAAC;gBACrC,MAAM,CAAC;YACV,CAAC;YACD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,IAAI,EAAC,IAAI,EAAG,IAAI,EAAG,OAAO,EAAC,CAAC,CAAA;QACpE,CAAC;QAED,2BAAY,GAAZ;YAEE,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAE,CAAC,CAAA,CAAC;gBACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC9B,CAAC;YAAA,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;YAC1C,CAAC;YAAA,IAAI,CAAA,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACxB,CAAC;QACH,CAAC;QAGD,4BAAa,GAAb;YAGE,EAAE,CAAC,CAAE,IAAI,CAAC,cAAe,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC;YAEf,MAAM,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAA;QAClD,CAAC;QAGD,sBAAI,0BAAQ;iBAKX;gBACE,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC;gBAEd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC;YAC/C,CAAC;iBAVF,UAAa,KAAK;gBACf,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;gBAC7B,IAAI,CAAC,KAAK,CAAC,SAAS,CAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAE,GAAG,KAAK,CAAC;YAChD,CAAC;;;WAAA;QA3GH;YAAC,0BAAM,CAAE,uBAAM,EAAE,SAAG,EAAE,aAAK,EAAE,0CAAe,CAAE;;gBAAA;QAoH9C,WAAC;IAAD,CAnHA,AAmHC,IAAA;IAnHY,YAAI,OAmHhB,CAAA;;;AC3HD;ACAA;ACAA;ACAA;ACAA","file":"app-bundle.js","sourcesContent":["export class Story{\r\n  slug : string;\r\n  title : string;\r\n  description : string;\r\n  tags : string[];\r\n  authors : string[];\r\n  editors: string[];\r\n\r\n  /*** hashmap with all page data */\r\n  pages : { [page: number] : Page};\r\n\r\n  /*** hashmap of all state */\r\n  placeholders : { [variable : string ] : Placeholder };\r\n}\r\n\r\nexport class Page{\r\n  text : string;\r\n  image : string;\r\n\r\n  /*** for input, i[0] is input name, i[1] is placeholder */\r\n  input : Array<string>;\r\n\r\n  /*** for button, i[0] is button text, i[1] is desitnation page */  \r\n  buttons : Array<Array<string>>;\r\n}\r\n\r\nexport class Placeholder{\r\n  description : string;\r\n  value: string;\r\n}\r\n\r\nexport class Cover{\r\n  title : string;\r\n  description : string;\r\n  slug : string;\r\n  tags : Array<string>;\r\n  authors : string[];\r\n  editors: string[];\r\n\r\n  //aggregate data\r\n  pageCount : number; \r\n  pageStats : any;\r\n}","import { Cover, Page, Story} from './objects/objects';\nimport { inject } from 'aurelia-framework';\nimport {HttpClient, json} from 'aurelia-fetch-client';\n\nlet latency = 200;\nlet id = 0;\n\n@inject(HttpClient)\nexport class Api {\n\n  constructor(private http : HttpClient) {\n    http\n      .configure( config => \n        { config\n            .withBaseUrl('http://localhost:3000/')\n            .withDefaults({\n                credentials: 'omit',\n                headers: {\n                    'Accept': 'application/json', \n                    'X-Requested-With': 'Fetch'\n                }  \n             });\n        }\n      );\n\n    this.http = http;\n  }\n\n  isRequesting = false;\n  \n  /*** search for decks */\n  search( searchText : string ) : Promise<Cover[]>{   \n    this.isRequesting = true;\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = games;\n\n        let mapHeaders = \n          x =>  { return <Cover>{\n              title : x.title,\n              description : x.description,\n              slug : x.slug,\n              tags : x.tags,\n              authors : x.authors,\n              editors: x.editors,\n\n              //aggregate data\n              pageCount : x.pageCount, \n              pageStats : x.pageStat\n          }};\n\n        let q = !!searchText ? `/?q=${searchText}` : '';\n        this.http.fetch(`b/browse${q}`)\n          //.catch( error => alert( error ))\n          .then( response => response.json() )\n          .then( data => {\n                  let results = data.map( x => mapHeaders(x) );\n                  resolve(results);\n            });\n\n          this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getStory( storySlug : string  ) : Promise<Story>{\n\n    this.isRequesting = true;\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n\n        this.http.fetch(`s/${storySlug}/all`)\n          //.catch( error => alert( error ))\n          .then( response => response.json() )\n          .then( data => {\n                  //let results = data.map( x => mapHeaders(x) );\n                  resolve(data);\n            });\n\n\n      }, latency);\n    });\n\n  }\n            \n\n  /*** search for decks */\n  getPage( gameFolderName : string, pageNumber : number ) : Promise<Page>{   \n    this.isRequesting = true;\n\n    return new Promise(resolve => {\n      setTimeout(() => {\n\n        let page = <Page>game[pageNumber];\n\n        resolve(page);\n\n      }, latency);\n    });\n  }\n\n  public GetPage( game:string, page: number){\n\n  }\n\n\n}\n\n\nvar games = [{\n  folder : 'sample-game-for-example',\n  title : 'Sample Game',\n  description : 'This is a sample game',\n  pages : 4,\n  genres : ['demo', 'test']\n}];\n\nvar game = {\n\n  state :{\n    dog_name:''\n  },\n\n  1 : {\n    text  : 'This is the text for page 1',\n    image :'5-mysterious-columns.jpg',\n    input : ['dog_name', 'Enter a name for your dog'],\n    buttons : [ ['Continue', '2'], ['Continue Alt','3'] ]  \n  },\n\n  2 : {\n    text  : 'This is the text for page 2 and his name was ${dog_name}',\n    image :'2-fleeting-abstract.jpg',\n    buttons : [ ['Back', '1'], ['Continue','3'] ]  \n  },\n\n  3 : {\n    text  : 'This is the text for page 3',\n    image :'4-historic-scene.jpg',\n    buttons : [ ['Back to start', '1'], ['Continue','4'] ]      \n  },\n\n  4 : {\n    text  : 'This is the text for page 4, Is this the end?',\n    image : '3-alien-bug.jpg',\n    buttons : [ ['Continue', 5]]    \n  },\n  \n  5 : {\n    text  : 'You have found the wall painting. The treasure is yours.',\n    image : '1-wall-painting.jpg',\n    buttons : []    \n  }\n  \n}\n\n\n// input [ 'dog_name', \"Enter a name for your dog\"] \n// ^ template / state name, placeholder name\n/* folder name = game_title\n\nREADME.txt (author rules, etc)\nmeta.json\nstate.json\n\npages > \n1.json\n2.json\n3.json\n\nimages >\n\n1_dog_happy.jpg\n2_dog_sad.jpg\n3_dog_jumping.jpg\n\n*/\n\n\n\n\n\n\n\n","import {Router, RouterConfiguration} from 'aurelia-router';\nimport {Cover} from './objects/objects';\n\nimport {inject} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\n\n\n@inject(EventAggregator)\nexport class App {\n\n\n constructor( private eventAggregator : EventAggregator){\n\n   this.subscribe();\n }\n\n message = 'Choose Your Own Adventure';\n\n router : Router;\n  \n configureRouter(config: RouterConfiguration, router: Router): void {\n    this.router = router;\n    config.title = 'Aurelia';\n    config.map([\n\n      //find an adventure game\n      { route: ['', 'browse'], title:'Browse Games',   name: 'browse',   moduleId: './pages/browse', nav:true},\n\n      // play an adventure game => :name is the game name, :id is the page number\n      // all state is in the URL!\n      { route: 'play/:slug/:page?', name: 'play', \n          moduleId: './pages/play', activationStrategy:'replace',\n          // viewPorts: { default : './pages/play',\n          //             bottome :'./more' }\n                    }\n\n    ]);\n  }\n\n  goToHome(){\n    this.router.navigateToRoute('browse');\n  }\n\n  subscribe(){\n   this.eventAggregator.subscribe('SelectStory', story => {\n       this.selectedStory = story;\n    });\n  }\n  selectedStory : Cover;\n\n\n}\n\n\n","export default {\n  debug: true,\n  testing: true\n};\n","import {ViewStrategy, InlineViewStrategy} from 'aurelia-framework';\r\nimport {inlineView} from 'aurelia-framework';\r\nimport {bindable} from 'aurelia-framework';\r\n\r\n\r\n/*** \r\n *  created to : apply and render string inerpolation to templates\r\n * \r\n *  sample use\r\n *  <compose view-model=\"interpolator\" model.bind=\"{ state : state , template : 'Hi my name is ${name}' }\"></compose>\r\n *  where state is a property on the parent model eg: state = { name :'Jim' }\r\n */\r\nexport class Interpolator{\r\n\r\n    template : string;\r\n    \r\n    activate(model){\r\n        this.template = model.template;\r\n        Object.assign( this, model.state );\r\n    }\r\n\r\n    getViewStrategy(){  \r\n        let view = `<template> ${this.template} </template>`;\r\n        return new InlineViewStrategy(view);\r\n    }\r\n\r\n    // bind(bindingContext: any, overrideContext: any) {\r\n    //     this.viewStrategy = new InlineViewStrategy(`<template>${this.template}</template>`);\r\n    // }\r\n\r\n    // viewStrategy:InlineViewStrategy;\r\n}\r\n\r\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {Router, RouterConfiguration} from 'aurelia-router';\nimport {Story} from './objects/objects';\n\n\nexport class State {\n\n  //templateText : string = \"\";\n\n\n  /*** user input for game */\n  storyData : any = {};\n\n  /*** story data for active game */\n  story : Story  \n\n  /*** projection of placeholder values onto  */\n  \n  // get placeholderValues() \n  // {\n  //   let result = {};\n\n  //   let keys = Object.keys( this.story.placeholders );\n\n  //   keys.forEach(key => {\n  //     result[key] = this.story.placeholders[key].value\n  //   });\n\n  //   return result;\n  // }\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources('./elements/browse-card.html');\n}\n","import { Router, RouterConfiguration} from 'aurelia-router';\nimport { Cover, Page} from './../objects/objects';\nimport { Api } from './../api';\nimport { inject } from 'aurelia-framework';\nimport { EventAggregator} from 'aurelia-event-aggregator';\n\n@inject( Router, Api, EventAggregator )\nexport class Browse {\n\n constructor( private router : Router, private api : Api, private eventAggregator:EventAggregator ){\n    this.eventAggregator.publish(\"SelectStory\", null);\n }\n\n activate(){\n    return this.api.search('').then(\n          res => this.covers = res\n        );\n }\n\n goToGame(cover){\n    this.router.navigateToRoute('play', { slug : cover.slug });\n\n    this.eventAggregator.publish(\"SelectStory\", cover);\n }\n\n covers : Cover[];\n\n\n\n}\n\n\n","import { Router, RouterConfiguration} from 'aurelia-router';\nimport { Page, Story } from './../objects/objects';\nimport { Api } from './../api';\nimport { inject } from 'aurelia-framework';\nimport { State } from './../state';\nimport { EventAggregator } from 'aurelia-event-aggregator';\n\n@inject( Router, Api, State, EventAggregator )\nexport class Play {\n\n constructor( private router : Router, private api : Api, private state : State,\n              private eventAggregator : EventAggregator ){}\n\n text: string;\n image : string;\n imagePath : string;\n buttons : Array<Array<string>>;\n input : Array<string>;\n story : Story;\n\n canActivate( params ){\n\n   if ( this.state.story == null ||\n        this.state.story.slug != params.slug ){\n\n      //try load story\n      let p  = new Promise( (resolve, reject) => \n        this.api\n          .getStory( params.slug )\n          .then( res => {\n\n            if ( res.pages == null ){\n              resolve(false);\n              alert('The story has no pages');\n              this.router.navigateToRoute('browse');\n            }else{\n\n              this.state.story = res;\n              resolve(true);\n            }\n\n        }).catch(\n          (err) => alert('Unable to load story! ' + err )\n        )      \n      );\n\n      return p;   \n   }\n }\n\n activate( params ){\n         \n    let page = 1;\n    if ( params.page == null ){\n        params.page = 1;\n    }    \n    \n    //params not null\n    page = params.page;\n    this.setPageData(page);    \n\n    this.eventAggregator.publish(\"SelectStory\", this.story.cover);\n }\n\n setPageData( pageNum : number ){\n\n   try{\n    let page = this.state.story.pages[pageNum];\n    this.text = page.text;\n    this.image = page.image;\n    this.buttons = page.buttons;          \n    this.input = page.input;\n    this.story = this.state.story;\n    this.setImagePath();\n   }catch(ex){\n     alert(`Unable to find page ${pageNum}`);\n   }\n }\n\n goToPage(pageNum : string){\n   if ( this.input && !this.inputVal){\n      alert(`Please enter required input`);\n      return;\n   }  \n   this.isPageChanging = true;\n   let slug = this.state.story.slug;\n   this.router.navigateToRoute('play', { slug:slug  ,page : pageNum})\n }\n\n setImagePath(){\n\n   if ( this.image.indexOf(\"www.\") > -1 ){\n     this.imagePath = this.image;\n   }else if (this.image){\n     this.imagePath = 'images/' + this.image;\n   }else{\n     this.imagePath = null;\n   }\n }\n\n isPageChanging : boolean = false;\n canDeactivate(){\n   //debugger;\n\n   if ( this.isPageChanging )\n      return true;\n\n   return confirm('Are you sure you want to exit?')\n }\n\n // bound value\n set inputVal(value) {\n    console.log(\"Set: \" + value);\n    this.state.storyData[ this.input[0] ] = value;\n  }\n\n  get inputVal() { \n    if ( !this.state.storyData[ this.input[0] ])\n      return null;\n\n    return this.state.storyData[ this.input[0] ];\n  }\n\n}\n\n\n",null,null,null,null,null],"sourceRoot":"..\\src"}